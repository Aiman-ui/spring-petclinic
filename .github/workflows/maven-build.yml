name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  setup:
    runs-on: self-hosted
    steps:
      - name: Check for Git
        run: |
          if ! command -v git &> /dev/null
          then
              echo "Git not found, installing..."
              sudo yum update -y
              sudo yum install -y git
          else
              echo "Git is already installed."
          fi
      - name: Check for Docker
        run: |
          if ! command -v docker &> /dev/null
          then
              echo "Docker not found, installing..."
              sudo yum update -y
              sudo yum install -y docker
              sudo systemctl start docker
              sudo systemctl enable docker
          else
              echo "Docker is already installed."
          fi
      - name: Check for Maven
        run: |
          if ! command -v mvn &> /dev/null
          then
              echo "Maven not found, installing..."
              sudo yum update -y
              sudo yum install -y maven
          else
              echo "Maven is already installed."
          fi
      - name: Validate Installation
        run: |
          echo "Validating installation..."
          command -v git
          command -v docker
          command -v mvn

  build:
    runs-on: self-hosted
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Build with Maven
        run: ./mvnw -B package

  test:
    runs-on: self-hosted
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Run tests
        run: ./mvnw test

  deploy:
    runs-on: self-hosted
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Verify JAR file
        run: |
          echo "Verifying JAR file presence..."
          # Dynamically determine the JAR file path
          JAR_PATH="${{ github.workspace }}/target/spring-petclinic-3.3.0-SNAPSHOT.jar"
          echo "Expected JAR Path: $JAR_PATH"
          
          # Check if the JAR file exists and display a message if not
          if [ ! -f "$JAR_PATH" ]; then
             echo "JAR file not found at $JAR_PATH"
             exit 1
          else
             echo "JAR file found at $JAR_PATH"
          fi

      - name: Setup SSH
        run: |
          echo "Setting up SSH..."
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H $DEPLOY_SERVER >> ~/.ssh/known_hosts || true
      - name: Deploy application
        env:
          DEPLOY_SERVER: '192.168.1.199'
          DEPLOY_PORT: '8080'
          DEPLOY_USER: 'aiman'
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          echo "Deploying application to $DEPLOY_SERVER"
          scp -i ~/.ssh/id_rsa $JAR_PATH $DEPLOY_USER@$DEPLOY_SERVER:/home/aiman/deployments/
          ssh -i ~/.ssh/id_rsa $DEPLOY_USER@$DEPLOY_SERVER "nohup java -jar /home/aiman/deployments/spring-petclinic-3.3.0-SNAPSHOT.jar > /dev/null 2>&1 &"
          rm -f ~/.ssh/id_rsa
      - name: Wait for application to start
        run: |
          echo "Waiting for application to start..."
          for i in {1..30}; do
            if curl -s http://192.168.1.199:8080 > /dev/null; then
              echo "Application is up!"
              break
            else
              echo "Application is not up yet, retrying in 10 seconds..."
              sleep 10
            fi
          done 
